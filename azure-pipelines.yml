# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:

 # Container registry service connection established during pipeline creation
  dockerfilePath: '**/docker/carts/Dockerfile'
  tag: '$(Build.BuildId)'
  acrRepo: catalogue

pool:
  vmImage: 'ubuntu-latest'

resources:
  repositories:
    - repository: microservicesdemo
      type: github
      name: northpoint/microservices-demo
      endpoint: github-svcconn
      ref: femi-azure-pipelines

stages:
- stage: JavaDockerBuildPush
  displayName: Java/Docker Build & Push stage
  jobs:
  - job: JavaBuild 
  - template: /pipeline-templates/java-build.yaml@microservicesdemo
    parameters:
      mavenPomFile: 'pom.xml'
      jdkVersionOption: 1.8
      goals: package

  - job: DockerBuildPush 
    dependsOn: JavaBuild
    condition: succeeded()
  - template: /pipeline-templates/docker-builddeploy-pipeline.yaml@microservicesdemo  # Template reference
    parameters:
      tag: $(tag)
      acrRepo: carts
      dockerfilePath: $(dockerfilePath)
      buildContext: './docker/carts/'
  
      
- stage: HelmDeplo
  displayName: Helm Deploy
  jobs:
  - template: /pipeline-templates/helm-deploy-pipeline.yaml@microservicesdemo
    parameters:
      serviceName: carts
      image: $(acrRepo):$(tag)
